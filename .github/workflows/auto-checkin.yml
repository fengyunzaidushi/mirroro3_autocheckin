name: Mirror O3 Pro Auto Checkin

on:
  schedule:
    # 每天北京时间上午9点执行 (UTC时间凌晨1点)
    - cron: '0 1 * * *'
  workflow_dispatch:
    # 允许手动触发
    inputs:
      test_mode:
        description: '是否以测试模式运行'
        required: false
        default: 'false'
        type: boolean

jobs:
  checkin:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Create config file from secrets
      run: |
        cat > pve_checkin_config.json << EOF
        {
          "login": {
            "email": "${{ secrets.LOGIN_EMAIL }}",
            "password": "${{ secrets.LOGIN_PASSWORD }}"
          },
          "auth_token": "${{ secrets.AUTH_TOKEN || '' }}",
          "user_info": {
            "id": 0,
            "username": "",
            "email": ""
          },
          "max_retries": 3,
          "retry_delay": 300,
          "email_alerts": {
            "enabled": ${{ secrets.EMAIL_ENABLED || 'false' }},
            "smtp_server": "${{ secrets.SMTP_SERVER || '' }}",
            "smtp_port": ${{ secrets.SMTP_PORT || 465 }},
            "smtp_user": "${{ secrets.SMTP_USER || '' }}",
            "smtp_password": "${{ secrets.SMTP_PASSWORD || '' }}",
            "from_email": "${{ secrets.FROM_EMAIL || '' }}",
            "to_email": "${{ secrets.TO_EMAIL || '' }}",
            "on_failure": true,
            "on_success": false,
            "on_token_refresh": true
          },
          "logging": {
            "level": "INFO",
            "max_log_days": 30
          }
        }
        EOF
        
    - name: Verify config file
      run: |
        echo "Configuration file created successfully"
        echo "Config file size: $(stat -c%s pve_checkin_config.json) bytes"
        echo "Login email configured: ${{ secrets.LOGIN_EMAIL && 'Yes' || 'No' }}"
        echo "Auth token configured: ${{ secrets.AUTH_TOKEN && 'Yes' || 'No (will auto-login)' }}"
        echo "Email alerts configured: ${{ secrets.EMAIL_ENABLED && 'Yes' || 'No' }}"
        
    - name: Run checkin (Test Mode)
      if: ${{ github.event.inputs.test_mode == 'true' }}
      run: |
        echo "Running in test mode..."
        python github_actions_checkin.py --test
        
    - name: Run checkin (Normal Mode)
      if: ${{ github.event.inputs.test_mode != 'true' }}
      run: |
        echo "Running checkin..."
        python github_actions_checkin.py
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: checkin-logs-${{ github.run_number }}
        path: pve_checkin_*.log
        retention-days: 30
        
    - name: Clean up config file
      if: always()
      run: |
        rm -f pve_checkin_config.json pve_checkin_status.json